-문제 1

키워드 const는 어떠한 의미를 갖는가? 다음 문장들을 대상으로 이를 설명해보자.

1. const int num = 10;
2. const int*ptr1 = &val1;
3. int*const ptr2 = &val2;
4. const int*const ptr3 = &val3;

-답
1. const int num = 10; → 변수 num을 상수화.
2. const int*ptr1 = &val1; → 포인터 ptr1을 이용해서 val1의 값을 변경할 수 없음.
3. int*const ptr2 = &val2; → 포인터 ptr2가 상수화 됨.
4. const int*const ptr3 = &val3; → 포인터 ptr3가 상수화 되었으며, ptr3값을 이용해서 val3의 값을 변경할 수 없다.

- 문제 2
    
    실행중인 프로그램은 운영체제로부터 메모리 공간을 할당 받는데, 이는 크게 데이터, 스택, 힙 영역으로 나뉜다.
    
    각각의 영역에는 어떠한 형태의 변수가 할당되는지 설명해보자.
    
    특히 C언어의 malloc과 free 함수와 관련해서도 설명해보자.

- 답
    1. 데이터 : 전역변수가 저장되는 영역
    2. 스택 : 지역변수 및 매개변수가 저장되는 영역
    3. 힙 : malloc 함수호출에 의해 프로그램이 실행되는 과정에서 동적으로 할당이 이뤄지는 영역
    4. malloc & free : malloc 함수호출에 의해 할당된 메모리 공간은 free 함수호출을 통해서 소멸하지 않으면 해제되지 않는다.


- 문제 3
    
    Call - by - value vs Call (값에의한 호출) - by reference (참조에 의한 호출)
    
    이 둘을 나누는 기준이 무엇인지, 두 int형 변수의 값을 교환하는 Swap함수를 예로 들어가며 설명해보자.


- 답	
	void SwapByValue (int num1, int num2)
	{
		int temp = num1;
		num 1  = num 2;
		num 2 = temp;
	}     // Call by value

-------------------------------------------------------------------

	void SwapByRef (int*ptr1, int*ptr2)
	{
		int temp = *ptr1;
		*ptr1 = *ptr2;
		*ptr2 = temp;
	} 	// Call - by - reference